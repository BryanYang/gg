import React, { useState, useEffect, useMemo } from "react";
import { Table, Button, Tag, Row, Col, Space, message } from "antd";
import moment from "moment";
import { Content } from "antd/es/layout/layout";
import useLoadData from "../../hooks/useLoadData";
import { CaseStudy } from "../../models/Case";
import { getCaseStudies, removeAnswer, updateStudy } from "../../api/case";
import { useNavigate } from "react-router-dom";
import ClipboardJS from "clipboard";
import { useModal } from "../../hooks/ModalContext";

const ExperimentTable = () => {
  const [pagination, setPagination] = useState({
    current: 1,
    pageSize: 10,
    total: 0,
  });

  const navigate = useNavigate();
  const modal = useModal();
  useEffect(() => {
    const clipboard = new ClipboardJS(".copy-btn");
    clipboard.on("success", function (e) {
      alert("分享链接已经复制到您的剪贴板，快去分享吧～");
      e.clearSelection();
    });

    return () => {
      clipboard.destroy();
    };
  }, []);

  const columns = useMemo(
    () => [
      {
        title: "序号",
        dataIndex: "id",
        key: "id",
        render: (v: any, _: any, index: number) => index + 1,
      },
      {
        title: "实验名称",
        dataIndex: "case",
        key: "name",
        render: (v: any, r: any) => (
          <Row align="middle" style={{ height: 60 }}>
            <Col>{v.title}</Col>
            {r.state === 1 ? (
              <Col>
                <svg
                  version="1.1"
                  xmlns="http://www.w3.org/2000/svg"
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  height="48"
                  width="80"
                  viewBox="0 0 1448 1024"
                >
                  <path
                    d="M724.007391 216.565765c97.359987 0 183.71107 47.131866 237.379473 119.721821l37.67109 10.148833c-56.248614-93.231648-158.424996-155.500756-275.050563-155.500756-56.420628 0-109.400974 14.621199-155.500756 40.079287l37.499076 10.148833c36.294977-15.825298 76.202251-24.598018 118.00168-24.598018z m194.031917-16.685369l20.641693 16.685369 6.364522-25.11406 23.049891-13.417101-23.049891-13.4171-6.364522-25.11406-20.641693 16.685368-27.006215-1.892155 10.320846 23.737947-10.320846 23.737948 27.006215-1.892156zM560.421972 143.803796L539.264237 129.010583l-4.644381 26.146145-21.673778 16.169326 23.393919 11.180917 7.740635 24.770032 19.093566-19.26558 26.490173-0.860071-11.69696-22.877876 8.600706-25.286075-26.146145 4.816395z m198.504284-36.122963l-15.653284-20.469679-12.385016 23.565933-25.630103 8.77272 18.921552 17.889467-0.172014 25.974131 24.081976-12.55703 25.458088 7.224593-3.956324-25.458089 15.825298-21.501764-26.490173-3.440282z m287.435578 161.349236l-22.18982-15.48127-3.096254 25.802117-20.985721 15.309255 24.253989 12.040988 9.288762 24.942046 18.233496-18.40551H1078.528473l-13.073072-23.393919 7.224592-24.770032-26.318159 3.956325z m289.15572 194.031917l-1116.371577-299.132539c-27.350244-7.396607-55.560558 8.944734-62.957165 36.294978L76.374265 497.98085c-7.396607 27.350244 8.944734 55.560558 36.294977 62.957164l1116.371578 299.132539c27.350244 7.396607 55.560558-8.944734 62.957164-36.294978l79.814547-297.756425c7.396607-27.350244-8.944734-55.560558-36.294977-62.957164z m8.084663 68.63363l-73.105997 272.814379c-5.504452 20.469679-26.662187 32.682681-47.131866 27.178229l-1091.601545-292.423987c-20.469679-5.504452-32.682681-26.662187-27.17823-47.131867l73.105997-272.986393c5.504452-20.469679 26.662187-32.682681 47.131866-27.17823l1091.601546 292.423988c20.469679 5.676466 32.682681 26.834201 27.178229 47.303881zM724.007391 49.712078c213.985554 0 393.912313 145.351923 446.720645 342.652108l28.382329 7.568621C1148.538216 184.399126 955.022342 23.909961 724.007391 23.909961c-140.019486 0-266.277843 59.00084-355.381152 153.436587l28.382328 7.568621C480.779439 101.488325 596.372921 49.712078 724.007391 49.712078z m118.00168 733.124139c-36.122963 15.653284-76.030237 24.426004-117.829666 24.426004-97.359987 0-183.71107-47.131866-237.379472-119.721821l-37.67109-10.148833c56.248614 93.231648 158.424996 155.500756 275.050562 155.500756 56.420628 0 109.400974-14.621199 155.500756-40.079288l-37.67109-9.976818z m-275.566605 53.324374l-20.469679-16.685368-6.364522 24.942046-22.877877 13.4171 22.877877 13.417101 6.364522 24.942046 20.469679-16.685369 26.834201 2.064169-10.320846-23.737947 10.320846-23.737947-26.834201 2.064169z m157.564925 79.126491L739.660675 935.756761l12.213002-23.393919 25.458088-8.772719-18.749538-17.889468 0.172015-25.974131-23.909962 12.385016-25.286074-7.224592 3.956324 25.458088-15.825298 21.501764 26.318159 3.440282z m-324.76264-161.349236l20.985721 16.857383 4.988409-25.458088 21.845792-13.761129-23.221905-13.589115-7.396606-25.458088-19.265581 17.029397-26.490173-1.892155 11.352931 24.081975-8.944733 24.25399 26.146145-2.06417z m324.76264 220.350076c-213.985554 0-393.912313-145.351923-446.720645-342.652108l-28.382328-7.568621c50.572148 215.53368 244.088023 376.022846 475.102973 376.022846 140.019486 0 266.277843-59.00084 355.381153-153.436587l-28.382329-7.568621c-83.598858 83.426844-199.19234 135.203091-326.998824 135.203091z m185.77524-94.263733l20.985721 14.793214 4.472367-25.974131 21.501764-16.169326-23.221905-11.180917-7.740635-24.770032-18.921552 19.093566-26.318159 0.860071 11.524945 23.04989-8.428691 25.286075 26.146145-4.98841z"
                    fill="#2C933A"
                  ></path>
                  <path
                    d="M330.61112 407.501428l-20.297665 75.514194c-2.752226 10.148833 1.032085 16.685369 11.180918 19.437595l140.707542 37.67109c4.472367 1.204099 9.288762 0.688056 14.105157-1.720141 4.988409-2.92424 12.040988-18.921552 21.501764-47.30388l26.490173 16.857382c-13.417101 35.262893-23.909961 55.216529-31.134554 59.860911-8.428691 4.472367-18.749538 5.332437-30.102469 2.92424l-157.392912-42.143457c-24.426004-6.536536-32.854695-22.361834-25.97413-47.819923l39.219217-146.556022 29.414413 7.912649-9.976819 37.327062 144.663867 38.703175 17.201411-64.505292-185.947253-49.712078 7.568621-28.382328 216.049723 57.796741-32.510667 120.753906-174.766337-46.615824zM843.21317 543.736603l-7.568621 28.554343-76.202251-20.297665-14.965228 56.0766c-2.236183 8.428691 0 13.589115 6.708551 15.48127l34.74685 9.288762c2.752226 0.688056 5.332437-0.688056 7.740635-3.956325 2.064169-3.440282 6.364522-14.621199 12.040988-33.714766l25.630102 16.341341c-9.63279 28.382328-17.717453 44.723669-24.253989 48.679993-5.84848 3.956325-13.761129 4.816395-23.049891 2.408198l-49.540064-13.245087c-20.297665-5.504452-27.522258-19.781623-21.32975-43.003527l16.513355-61.92508-40.423316-10.836889c-8.77272 27.350244-22.705863 47.647909-41.283387 60.548967-17.889467 11.524945-43.51957 17.717453-77.062321 17.889467l-9.804804-31.134554c32.338653 0.516042 55.216529-3.440282 68.63363-11.868973 13.761129-9.63279 23.737947-23.909961 30.102469-43.175542L586.740131 505.721485l7.568621-28.554342 248.904418 66.56946z m7.912649-38.359146l-29.758441-7.912649 10.664875-39.563246-185.603226-49.712078-10.664874 39.563246-29.758442-7.912649 18.233496-68.289602 104.412565 27.866286c-0.688056-8.600706-1.892155-16.513355-3.612296-24.081976l35.262893 3.268268c0.860071 9.116748 1.548127 18.921552 1.720141 29.586427l107.336805 28.726357-18.233496 68.461616z m-38.359147-25.974131l-7.568621 28.382328-161.349235-43.175541 7.568621-28.382329 161.349235 43.175542zM1164.1915 516.042332l-16.513355 9.804804 33.714766 8.944734-7.568621 28.0383-83.254829-22.189821c-6.536536 33.370737-9.976818 59.86091-10.148833 78.610449-0.172014 4.128339 0 8.256677 0 12.385016 16.685369-16.857383 32.166639-37.155048 46.271796-60.720981l23.737947 18.749538c-20.641693 33.026709-43.003528 59.86091-66.913489 80.33059 1.032085 6.364522 2.580212 12.213002 4.128339 17.201411 4.644381 14.277171 9.288762 22.18982 13.417101 23.393919 2.752226 0.688056 9.804804-11.868974 20.813707-38.187133l22.705862 21.501764c-18.061482 38.015118-33.88678 55.216529-47.991936 51.432219-12.385016-3.268268-23.221905-15.309256-32.682681-35.778935-2.580212-6.192508-4.988409-12.901058-6.708551-19.953637-24.081975 15.309256-49.884092 25.11406-77.062321 29.414413l-10.320847-29.414413c29.758441-4.816395 57.108685-15.997312 81.706703-33.542751-1.376113-11.008903-1.892155-22.705863-1.892156-35.090879-0.172014-24.25399 3.440282-54.012431 10.320847-88.587267l-88.243239-23.565933-10.49286 39.391231 69.321686 18.577524c-14.965228 52.464304-26.490173 84.458928-34.918864 96.155888-7.740635 10.664875-19.26558 13.933143-34.574836 10.148833-6.70855-1.892155-14.277171-4.472367-22.533849-7.568621l-1.892155-29.242399c11.180917 3.956325 20.297665 6.880564 28.210314 9.116748 4.644381 0.860071 8.428691-1.032085 11.352931-6.364522 3.440282-6.020494 9.116748-23.737947 17.373425-52.464304l-39.907273-10.664875c-15.48127 52.29229-38.359147 91.339493-68.805644 117.485638l-17.029397-26.146145c24.426004-20.985721 43.175542-54.528473 56.248614-100.284227l25.286074-94.263732 116.625567 31.134554c2.92424-13.245087 6.70855-27.006215 10.492861-41.111373l29.930455 8.084664c-3.78431 14.449185-7.224593 28.0383-10.148833 41.283386l39.907274 10.664875c-4.988409-9.804804-11.69696-20.813707-20.469679-32.166639l23.393919-12.901058c10.664875 13.245087 18.749538 26.146145 25.11406 38.359147z"
                    fill="#2C933A"
                  ></path>
                </svg>
              </Col>
            ) : null}
          </Row>
        ),
      },
      {
        title: "开始时间",
        dataIndex: "startDate",
        key: "startDate",
        render: (v: any) => moment(v).format("YYYY-MM-DD HH:mm:ss"),
      },
      {
        title: "结束时间",
        dataIndex: "endDate",
        key: "endDate",
        render: (v: any) =>
          v ? moment(v).format("YYYY-MM-DD HH:mm:ss") : "--",
      },
      {
        title: "实验班级",
        dataIndex: "class",
        key: "class",
      },
      {
        title: "分配者",
        dataIndex: "distributor",
        key: "distributor",
      },
      {
        title: "实验状态",
        dataIndex: "state",
        key: "state",
        render: (v: any) =>
          v === 1 ? <Tag color="green">完成</Tag> : <Tag>未完成</Tag>,
      },
      {
        title: "审核状态",
        dataIndex: "state",
        key: "state",
        render: (v: any) => (v === 1 ? "已阅" : "未阅"),
      },
      {
        title: "操作",
        key: "action",
        render: (_: any, record: any) => {
          return (
            <Space>
              <Button
                onClick={async () => {
                  if (record.state === 1) {
                    modal.confirm({
                      title: "确定要重做吗？将会删除当前记录",
                      onOk: async () => {
                        await updateStudy({
                          ...record,
                          startDate: new Date().getTime(),
                          endDate: null,
                          state: 0,
                          currentStep: 0,
                          summary: "",
                        });
                        await removeAnswer(record.id);
                        navigate(`/case/${record.case.id}`);
                      },
                      cancelText: "取消",
                      okText: "重做",
                    });
                  } else {
                    navigate(`/case/${record.case.id}`);
                  }
                }}
                type="primary"
                size="small"
              >
                {record.state === 1 ? "重做" : "继续"}
              </Button>

              <Button
                onClick={() => {}}
                data-clipboard-text={`我刚在这里完成了一项测试，你也来试试吧！➡️${
                  window.location.protocol +
                  "//" +
                  window.location.host +
                  "/case/" +
                  record.case.id
                }`}
                className="copy-btn"
                size="small"
              >
                分享
              </Button>

              <Button onClick={() => {}} className="copy-btn" size="small">
                查看报告
              </Button>
            </Space>
          );
        },
      },
    ],
    [navigate]
  );

  const handleTableChange = (pagination: any) => {
    setPagination(pagination);
  };

  const { data, loading, error } = useLoadData(getCaseStudies);

  return (
    <Content style={{ padding: 60, width: 1440, margin: "0 auto" }}>
      <Table
        columns={columns}
        dataSource={data || []}
        pagination={pagination}
        loading={loading}
        onChange={handleTableChange}
      />
    </Content>
  );
};

export default ExperimentTable;
